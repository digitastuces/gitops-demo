
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: demo
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: <ACCOUNT_ID>.dkr.ecr.<AWS_REGION>.amazonaws.com/gitops-demo-backend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: demo
  labels:
    app: backend
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
    - name: http
      port: 80
      targetPort: 8080


# Optional Ingress (ALB) â€” uncomment to expose publicly
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: backend-ingress
#   namespace: demo
#   annotations:
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
#     alb.ingress.kubernetes.io/healthcheck-path: /healthz
# spec:
#   ingressClassName: alb
#   rules:
#     - host: backend.eks.digitastuces.com
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: backend
#                 port:
#                   number: 80
