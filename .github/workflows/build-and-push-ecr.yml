
name: build-and-push-ecr
on:
  push:
    branches: [ "main" ]
    paths:
      - '006-gitops-pipeline/**'
env:
  AWS_REGION: eu-west-3
  ECR_BACKEND: gitops-demo-backend
  ECR_FRONTEND: gitops-demo-frontend
jobs:
  backend:
    runs-on: ubuntu-latest
    permissions: { id-token: write, contents: read }
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - uses: aws-actions/amazon-ecr-login@v2
      - name: Build & Push backend
        working-directory: 006-gitops-pipeline/backend
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REPO="${ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_BACKEND }}"
          aws ecr describe-repositories --repository-names "${{ env.ECR_BACKEND }}" >/dev/null 2>&1 ||             aws ecr create-repository --repository-name "${{ env.ECR_BACKEND }}"
          docker build -t "$REPO:latest" .
          docker push "$REPO:latest"
  frontend:
    runs-on: ubuntu-latest
    permissions: { id-token: write, contents: read }
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - uses: aws-actions/amazon-ecr-login@v2
      - name: Build & Push frontend
        working-directory: 006-gitops-pipeline/frontend
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REPO="${ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_FRONTEND }}"
          aws ecr describe-repositories --repository-names "${{ env.ECR_FRONTEND }}" >/dev/null 2>&1 ||             aws ecr create-repository --repository-name "${{ env.ECR_FRONTEND }}"
          docker build -t "$REPO:latest" .
          docker push "$REPO:latest"
